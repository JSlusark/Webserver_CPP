struct stat pathStat;
    if (stat(path.c_str(), &pathStat) == 0 && S_ISDIR(pathStat.st_mode)) {
        std::string indexPath = path;
        if (indexPath[indexPath.length() - 1] != '/')
            indexPath += "/";
        indexPath += index_file;
        std::cout << "[DEBUG] Directory detected. Looking for index: " << indexPath << std::endl;

        if (access(indexPath.c_str(), F_OK) == 0) {
            std::cout << "[DEBUG] Index file found. Sending..." << std::endl;
            send_response(client_fd, indexPath, "GET");
            return;
        }

        if (autoindex) {
            std::cout << "[DEBUG] Generating directory listing..." << std::endl;
            std::string html = generate_directory_listing(path, uri);
            std::string response_str = build_directory_response(html);
            write(client_fd, response_str.c_str(), response_str.size());
        } else {
            std::cout << "[DEBUG] Directory listing is off. Sending 403." << std::endl;
            send_error_response(client_fd, 403, "Directory listing forbidden", i);
        }
        return;
        
        
        
resolve_path()
